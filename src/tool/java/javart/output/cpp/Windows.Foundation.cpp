// WARNING: Please don't edit this file. It was generated by javax v2.0.000000.0
// Java/xlang projection for Windows.Foundation namespace

#include "pch.h"
#include "jbase.h"
#include <string_view>
#include "winrt/Windows.Foundation.h"

using namespace std::literals;
using namespace winrt;

#define JNI_EXPORT_NAMESPACE Java_Windows_Foundation

struct Inspectable : Projection<Windows::Foundation::IInspectable>
{
	static constexpr char projected_type[] = "Windows/Foundation/Inspectable";

    static auto abi_AddRef(jni_env&, jobject, jlong abi)
    {
        if (auto obj = agile_abi_ref::from(abi))
        {
            obj->addref();
        }
    }

    static auto abi_Release(jni_env&, jobject, jlong abi)
    {
        if (auto obj = agile_abi_ref::from(abi))
        {
            obj->release();
        }
    }

    static auto abi_GetClassName(jni_env&, jobject, jlong abi)
    {
        return get_class_name(resolve{ abi });
    }

    static auto abi_GetIdentity(jni_env&, jobject, jlong abi)
    {
        auto obj = resolve{ abi };
        return obj ? reinterpret_cast<jlong>(get_abi(obj.as<::IUnknown>())) : jlong{};
    }

    static void Register(jni_env& env, jclass cls) 
    {
        Projection::Register(env, cls);
        static JNINativeMethod methods[] =
        {
            JNI_METHOD_(abi_AddRef, "(J)V"),
            JNI_METHOD_(abi_Release, "(J)V"),
            JNI_METHOD_(abi_GetClassName, "(J)Ljava/lang/String;"),
            JNI_METHOD_(abi_GetIdentity, "(J)J"),
        };
        env.register_natives(cls, methods);
    }
};
JNI_EXPORT(Inspectable);

struct WwwFormUrlDecoder : Projection<Windows::Foundation::WwwFormUrlDecoder>, Iterable<WwwFormUrlDecoder>
{
    static constexpr char projected_type[] = "Windows/Foundation/WwwFormUrlDecoder";
    static constexpr char iterator_type[] = "Windows/Foundation/IteratorIWwwFormUrlDecoderEntry";

    static auto abi_GetFirstValueByName(jni_env&, jobject, jlong abi, jstring name)
    {
        return resolve{ abi }.GetFirstValueByName(name);
    }
        
    static void Register(jni_env& env, jclass cls)
    {
        Projection::Register(env, cls);
        Iterable::Register(env, cls);
        static JNINativeMethod methods[] =
        {
            JNI_METHOD_(abi_GetFirstValueByName, "(Ljava/lang/String;)Ljava/lang/String;"),
        };
        env.register_natives(cls, methods);
    }
};
JNI_EXPORT(WwwFormUrlDecoder);

struct WwwFormUrlDecoderEntry : Projection<Windows::Foundation::WwwFormUrlDecoderEntry>
{
    static constexpr char projected_type[] = "Windows/Foundation/WwwFormUrlDecoderEntry";

    static void Register(jni_env& env, jclass cls)
    {
        Projection::Register(env, cls);
        static JNINativeMethod methods[] =
        {
        };
        env.register_natives(cls, methods);
    }
};
JNI_EXPORT(WwwFormUrlDecoderEntry);

struct IteratorIWwwFormUrlDecoderEntry : Projection<Windows::Foundation::Collections::IIterator<IWwwFormUrlDecoderEntry>>, Iterator<IteratorIWwwFormUrlDecoderEntry>
{
	static constexpr char projected_type[] = "Windows/Foundation/IteratorIWwwFormUrlDecoderEntry";
	static constexpr char element_type[] = "IWwwFormUrlDecoderEntry";

	static void Register(jni_env& env, jclass cls)
	{
		Projection::Register(env, cls);
		Iterator::Register(env, cls);
	}
};
JNI_EXPORT(IteratorIWwwFormUrlDecoderEntry);

void Java_Windows_Foundation_Unregister(jni_env& env)
{
    WwwFormUrlDecoder::Unregister(*env);
    WwwFormUrlDecoderEntry::Unregister(*env);
    Inspectable::Unregister(env);
}
